        // TODO add your handling code here:
        //Setting up configurations for the email connection to the Google SMTP server using TLS
        Properties props = new Properties();
        props.put("mail.smtp.host", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");
        //Establishing a session with required user details]
        
        
        
          Session session = Session.getInstance(props, new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("test123server1234@gmail.com ", "brt125600");
            }
             });
          
        String text2  = username.getText(); 
        String text3 = email.getText();
        if (username.getText().trim().isEmpty() && email.getText().trim().isEmpty()) {
            Empty.setText("one or more fields is empty");
            
        } else{ 
          Connection connection = null;
        try{         
        connection  = DriverManager.getConnection("jdbc:mysql://elephant.ecs.westminster.ac.uk:3306/w1549895_0",
                        "w1549895", "qlHyxUJpoxxK");
        } catch (SQLException ex) { 
           System.out.println("not connected to database"); 
                    } 
        System.out.println("Database connect"); 
            ResultSet queryRes2 = null;
            try { 
            String sql = "SELECT * FROM UserLog WHERE Username=? and Email=?";            
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.setString(1, text2);
            pst.setString(2, text3);
            queryRes2 = pst.executeQuery(); 
           
            if (queryRes2.next())  { 
                             try {
                
                MimeMessage msg = new MimeMessage(session);
                //Storing theString to = "Select * from UserLog where Username=? & Email=? "; comma seperated values to email addresses
                String to = text3;  // or s.getString("Email") 
                /*Parsing the String with defualt delimiter as a comma by marking the boolean as true and storing the email
                addresses in an array of InternetAddress objects*/
                InternetAddress[] address = InternetAddress.parse(to, true);
                //Setting the recepients from the address variable
                msg.setRecipients(Message.RecipientType.TO, address);
                String timeStamp = new SimpleDateFormat("yyyymmdd_hh-mm-ss").format(new Date());
                msg.setSubject("Your Password : " + timeStamp);
                msg.setSentDate(new Date());
                //String rs = "Select * from UserLog where username=? & password=?";
                msg.setText("Heres your password " );
                msg.setHeader("XPriority", "1");
                Transport.send(msg);
                System.out.println("Mail has been sent successfully");
                                
                dispose();
                loginGUI  sentPass = new loginGUI();
                sentPass.setVisible(true);
                   }
                   catch (Exception ex) { 
                       System.out.println("");
                    }       
            
            } else {
                JOptionPane.showMessageDialog(null,"Username and Email Wrong");
                username.setText("");
                email.setText("");
                }
            connection.close();         
                     
            } catch (SQLException e) {
                System.out.println("Error: MySQL connection failed");
                e.printStackTrace();
                return;
                //JOptionPane.showMessageDialog(null, f);
                    }
        }        
