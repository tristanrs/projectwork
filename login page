 public loginGUI() {
        initComponents();
        jPanel1.setFocusable(true);
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2 -getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Username = new javax.swing.JTextField();
        Password = new javax.swing.JPasswordField();
        Login = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lEmpty = new javax.swing.JLabel();
        lEmpty1 = new javax.swing.JLabel();
        passFind = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bot = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(null);

        Username.setText("Enter Username");
        Username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UsernameFocusLost(evt);
            }
        });
        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });
        Username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UsernameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                UsernameKeyTyped(evt);
            }
        });
        jPanel1.add(Username);
        Username.setBounds(210, 170, 195, 36);

        Password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PasswordKeyReleased(evt);
            }
        });
        jPanel1.add(Password);
        Password.setBounds(210, 240, 195, 33);

        Login.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Login.setText("LOGIN");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });
        jPanel1.add(Login);
        Login.setBounds(170, 350, 127, 42);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("REGISTER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(330, 350, 131, 42);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo1.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(150, 10, 300, 130);
        jPanel1.add(lEmpty);
        lEmpty.setBounds(240, 210, 144, 17);
        jPanel1.add(lEmpty1);
        lEmpty1.setBounds(240, 280, 158, 21);

        passFind.setText("Retrive Password");
        passFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passFindActionPerformed(evt);
            }
        });
        jPanel1.add(passFind);
        passFind.setBounds(250, 410, 160, 23);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userlogin.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(130, 150, 60, 70);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/password.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(130, 230, 60, 50);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Prove Not A Bot");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(260, 310, 140, 21);

        bot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botActionPerformed(evt);
            }
        });
        jPanel1.add(bot);
        bot.setBounds(210, 310, 21, 21);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Red.1.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(-10, -10, 610, 470);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        dispose();
        Registration  tryreg = new Registration();
        tryreg.setVisible(true);
    }                                        

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        String text = Username.getText();
        String text1 = Password.getText();
        if(bot.isSelected()) {
        
        } else {
                JOptionPane.showMessageDialog(null,"prove not bot");
                bot.equals(false);
        }
        if (Username.getText().trim().isEmpty() && Password.getText().trim().isEmpty() || Username.getText().equals("Enter Username") && Password.getText().trim().isEmpty()) {
            lEmpty.setText("Username is empty");
            lEmpty1.setText("Password is empty");
        } else if (Username.getText().trim().isEmpty() || Username.getText().equals("Enter Username")) {

            lEmpty.setText("Username is empty");
        } else if (Password.getText().trim().isEmpty()) {

            lEmpty1.setText("Password is empty");
        }    else {
            
           Connection connection = null;
        try{     
            
            connection  = DriverManager.getConnection("jdbc:mysql://elephant.ecs.westminster.ac.uk:3306/w1549895_0",
                        "w1549895", "qlHyxUJpoxxK");
        } catch (SQLException ex) { 
           System.out.println("not connected to database"); 
                    } 
        System.out.println("Database connect"); 
            ResultSet queryRes = null;
            try { 
            String sql = "SELECT * FROM UserLog WHERE Username=?  and Password=?";            
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.setString(1, text);
            pst.setString(2, text1);
            queryRes = pst.executeQuery();        
            
            if(queryRes.next()) { 
                JOptionPane.showMessageDialog(null,"Username and Password Matched");
                Registration register = new Registration(); 
                register.setVisible(true);
                setVisible(false);
            }
            else {
                JOptionPane.showMessageDialog(null,"Username and Password Wrong");
                Username.setText("");
                Password.setText("");
                }
            
            connection.close();
        }
        catch (SQLException e) {
                System.out.println("Error: MySQL connection failed");
                e.printStackTrace();
                return;
                //JOptionPane.showMessageDialog(null, f);
                    }        
    }              
    }      
    
      private void UsernameKeyTyped(java.awt.event.KeyEvent evt) {                                  
        // TODO add your handling code here:
    }                                 

    private void UsernameKeyReleased(java.awt.event.KeyEvent evt) {                                     
        // TODO add your handling code here:
        lEmpty.setText("");
    }                                    

    private void PasswordKeyReleased(java.awt.event.KeyEvent evt) {                                     
        // TODO add your handling code here:
        lEmpty1.setText("");
    }                                    

    private void passFindActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        dispose(); 
        RetrivePass locPass = new RetrivePass();
        locPass.setVisible(true);
        
    }                                        

    private void botActionPerformed(java.awt.event.ActionEvent evt) {                                    
        // TODO add your handling code here:
        
        
    }                                   

    private void UsernameFocusGained(java.awt.event.FocusEvent evt) {                                     
        // TODO add your handling code here:
         if(Username.getText().trim().equals("Enter Username")){
            Username.setText("");
            Username.setForeground(Color.BLACK);
         }
    }                                    

    private void UsernameFocusLost(java.awt.event.FocusEvent evt) {                                   
        // TODO add your handling code here:
              if(Username.getText().trim().equals("") || Username.getText().trim().equals("Enter Username")){
                 Username.setText("Enter Username");
                 Username.setForeground(new Color(236, 240,241));
       } 
    }                                  

    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginGUI().setVisible(true);
            }
        });
    }
    
